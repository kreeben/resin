@{
    Layout = "~/Views/_Layout.cshtml";
}
@{ 
    var searchLink = $"{Context.Request.Path.Value.ToLower().Replace("/crawl", "/search")}{Context.Request.QueryString}";
}
    <form action="/crawl/" method="post">
        <div class="blog-wrapper">
            <a href="@searchLink">&#8592; Back to result</a>
            <h2>We offer four ways for you to crawl your result:</h2>
            <p>
                <label><input type="radio" name="job" value="fi" /> <strong>Fetch WARC files and index</strong> their content.</label>
            </p>
            <p>
                <label><input type="radio" name="job" value="ei" /> <strong>Extract from WARC files and index</strong> those resources referenced in your result.</label>
            </p>
            <p>
                <label><input type="radio" name="job" value="wci" /> <strong>Web crawl and index</strong> those resources referenced in your result.</label>
            </p>
            <p>
                <label><input type="radio" name="job" value="wcir" /> <strong>Recurringly web crawl and index</strong> those resources referenced in your result.</label>
            </p>
            <p>
                With any of our offers, when the crawling job has completed we will host a searchable document collection 
                with the data that was collected during the crawl. 
                You will be able to access this data using a web browser or a HTTP client.
            </p>
            <p>
                Name your collection carefully.
                You will need to reference your collection by name when reading, querying and writing.
            </p>
            <p><input type="text" placeholder="Name your collection" name="collection" /><input type="submit" /></p>
        </div>
    </form>