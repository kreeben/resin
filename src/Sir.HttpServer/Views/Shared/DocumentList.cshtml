@model IEnumerable<Sir.HttpServer.Controllers.SearchResultModel>
@{
    var displayQ = ViewData["qf"] ?? ViewData["q"];
}

@{
    IList<Sir.HttpServer.Controllers.SearchResultModel> docs = Model == null ?
        new Sir.HttpServer.Controllers.SearchResultModel[0].ToList() : Model.ToList();
}
<h3 class="querystats">@docs.Count results of @ViewData["total"] for <span class="querystats">@displayQ</span> in @ViewData["time_ms"] ms</h3>

<div>
    <ol>
        @foreach (var item in docs)
        {
            var url = item.Document["url"].ToString();
            var prefix = url.StartsWith("http") ? string.Empty : "https://";
            var uri = new Uri(prefix + url);
            var host = uri.Host.ToString();
            var title = item.Document.ContainsKey("title") ? item.Document["title"].ToString() : "Unknown title";
            var created = (long)item.Document["_created"];
            var score = (double)item.Document["___score"]; 
            <li>
                <div>
                    <div class="document-header">
                        <a href="/upvote/?url=@System.Web.HttpUtility.UrlEncode(uri.ToString())&q=@ViewData["q"]&collection=@ViewBag.Collection">
                            <div class="upvote" title="upvote">&#9650;</div>
                        </a>
                        <span><a class="result-link" href="@uri.ToString()">@title</a></span>
                    </div>
                    <div class="document-body">
                        <span style="font-weight:bold;color:black;opacity:0.45;font-size:9pt;">@host</span><br />
                        <span class="medium-text">Score: @score.ToString("N2")%</span><br />
                        <span class="medium-text">Indexed @DateTime.FromBinary(created)</span>
                    </div>
                </div>
            </li>
        }
    </ol>
</div>