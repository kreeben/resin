@model IEnumerable<Sir.HttpServer.Controllers.SearchResultModel>
@{
    IList<Sir.HttpServer.Controllers.SearchResultModel> docs = Model == null ?
        new Sir.HttpServer.Controllers.SearchResultModel[0].ToList() : Model.ToList();

    var jsonDownloadLink = $"{Context.Request.Path.Value.ToLower().Replace("/search", "/query")}{Context.Request.QueryString}";
    var crawlLink = $"{Context.Request.Path.Value.ToLower().Replace("/search", "/crawl")}{Context.Request.QueryString}";
    var saveAsLink = $"{Context.Request.Path.Value.ToLower().Replace("/search", "/saveas")}{Context.Request.QueryString}";

}
@if (docs.Count > 0)
{
    <div class="toolbar-wrapper">
        <span>@docs.Count hits of @ViewData["total"] in @ViewData["time_ms"] ms.</span>
        <div class="toolbar">
            <a href="@jsonDownloadLink" title="Use a HTTP client to GET result as Content-Type application/json">Download</a> as JSON.
            <a href="@saveAsLink" title="Save as document view">Save as</a> document view.
            <a href="@crawlLink" title="Make this document collection richer with information">Enrich</a>.
        </div>
    </div>
    <div class="result-list">
        <ul>
            @foreach (var item in docs)
            {
                var url = item.Document["url"].ToString();
                var prefix = url.StartsWith("http") ? string.Empty : "https://";
                var uri = new Uri(prefix + url);
                var host = uri.Host.ToString();
                var path = $"{host}{uri.LocalPath}";
                var title = item.Document.ContainsKey("title") ? item.Document["title"].ToString() : "Unknown title";
                var score = (double)item.Document[Sir.Search.SystemFields.Score] * 100;
                var warcFilename = item.Document.ContainsKey("filename") ? item.Document["filename"].ToString() : null;
                var wetFileName = warcFilename == null ? null : warcFilename.Replace("/warc", "/wet").Replace(".gz", ".wet.gz");
                var wetUrlFileName = wetFileName == null ? null : "https://commoncrawl.s3.amazonaws.com/" + Html.Raw(wetFileName);
                var warcUrlFileName = warcFilename == null ? null : "https://commoncrawl.s3.amazonaws.com/" + Html.Raw(warcFilename);
                var wetUrl = wetUrlFileName == null ? null : "/wet" + Context.Request.QueryString + "&fileName=" + wetUrlFileName;
                var warcUrl = warcUrlFileName == null ? null : "/warc" + Context.Request.QueryString + "&fileName=" + warcUrlFileName;
                <li>
                    <div class="document-header">
                        <span><a class="result-link" href="@Html.Raw(uri.ToString())">@Html.Raw(title)</a></span>
                    </div>
                    <div class="document-body">
                        <a class="document-subtitle" href="@uri.Scheme://@host"><span class="medium-text">@Html.Raw(host)</span></a><a class="document-subtitle" href="@uri.Scheme://@path"><span class="medium-text">@Html.Raw(uri.LocalPath)</span></a><br />
                        <span class="medium-text">@score.ToString("N0")%</span>
                        @if (wetUrl != null)
                        {
                            <span class="medium-text">
                                <a class="warc-link" href="@wetUrl">WET</a>
                            </span>
                        }
                        @if (warcUrl != null)
                        {
                            <span class="medium-text">
                                <a class="warc-link" href="@warcUrl">WARC</a>
                            </span>
                        }
                    </div>
                </li>
            }
        </ul>
    </div>
}